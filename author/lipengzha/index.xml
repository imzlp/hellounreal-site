<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>lipengzha on 虚幻 · 新知</title><link>https://hellounreal.com/author/lipengzha/</link><description>Recent content in lipengzha on 虚幻 · 新知</description><generator>Hugo -- gohugo.io</generator><language>zh</language><lastBuildDate>Sun, 25 Jun 2023 09:30:44 +0800</lastBuildDate><atom:link href="https://hellounreal.com/author/lipengzha/index.xml" rel="self" type="application/rss+xml"/><item><title>VisionOS的早期支持</title><link>https://hellounreal.com/status/epic/early-support-for-visionos/</link><pubDate>Sun, 25 Jun 2023 09:30:44 +0800</pubDate><guid>https://hellounreal.com/status/epic/early-support-for-visionos/</guid><description>Early Support for VisionOS 在ue5-main的分支中，Epic已经开始进行对VisionOS的支持，不过目前是非常早期的，仍处于不可用状态，但可以期待UE在VisionOS上的表现。
Very super early support for VisionOS (requires Xcode 15 beta2 or later)</description></item><item><title>Metadata目录的作用</title><link>https://hellounreal.com/status/2023/cooked-metadata-dir/</link><pubDate>Fri, 23 Jun 2023 12:35:44 +0800</pubDate><guid>https://hellounreal.com/status/2023/cooked-metadata-dir/</guid><description>Metadata目录的作用 打包或Cook完成后，在Cooked/PLATFORM/PROJECT_NAME下会产生一个Metadata目录。 它存储的是打包时产生的元数据：
Shader相关信息、ShaderLibrary/shader stable info，生成PSO需要 DevelopmentAssetRegistry，可以用于资产审计 打包的加密配置Crypto.json 参与Cook资源的Chunk信息 本次Cook的引擎环境（ini的配置信息） 备份它能实现PSO生成、资产审计、迭代cook等等。</description></item><item><title>导出Module依赖信息</title><link>https://hellounreal.com/status/2023/export-module-dependencies/</link><pubDate>Fri, 23 Jun 2023 12:15:44 +0800</pubDate><guid>https://hellounreal.com/status/2023/export-module-dependencies/</guid><description>导出Module依赖信息 引擎里UBT提供了一种模式，可以只导出工程中的模块依赖、头文件、宏定义等信息。以及工程依赖的每一个DLL的信息。
Engine\Build\BatchFiles\Build.bat XXXXEditor Development Win64 G:\Client\XXXX.uproject -mode=jsonexport Engine\Build\BatchFiles\Build.bat XXXX Development Win64 G:\Client\XXXX.uproject -mode=jsonexport Engine\Build\BatchFiles\Build.bat XXXX Development Android G:\Client\XXXX.uproject -mode=jsonexport 会在Binaries/PLATFORM下生成一个XXXXEditor.json文件。
注意XXXXEditor是Target，区分编辑器与运行时。</description></item><item><title>RealityScan for Android</title><link>https://hellounreal.com/status/epic/realityscan-for-android/</link><pubDate>Tue, 20 Jun 2023 20:45:44 +0800</pubDate><guid>https://hellounreal.com/status/epic/realityscan-for-android/</guid><description>RealityScan for Android RealityScan是一个EpicGames推出的移动设备拍摄3D模型的方案，之前只能在IOS平台使用。
现在，RealytyScan也已登陆Android平台：RealityScan is now available for Android devices!
App Store安装：RealityScan - 3D Scanning App Google Play安装：RealityScan - 3D Scanning App</description></item><item><title>adb console</title><link>https://hellounreal.com/status/2023/adb-console/</link><pubDate>Mon, 19 Jun 2023 20:45:44 +0800</pubDate><guid>https://hellounreal.com/status/2023/adb-console/</guid><description>adb执行console命令 adb shell &amp;#34;am broadcast -a android.intent.action.RUN -e cmd &amp;#39;stat fps&amp;#39;&amp;#34; 引擎中的Device Log界面中对设备执行Console指令就是通过该命令的封装实现的，实现代码为：AndroidTargetDevice.inl#L102</description></item><item><title>UFUNCTION(Exec)</title><link>https://hellounreal.com/status/2023/ufunction-exec/</link><pubDate>Mon, 19 Jun 2023 10:45:44 +0800</pubDate><guid>https://hellounreal.com/status/2023/ufunction-exec/</guid><description>UFUNCTION(Exec) 在UFUNCTION元标记中添加Exec指示符，可以在Console中执行函数。 但它也有一些限制，文档中说的含糊不清：
Exec: The function can be executed from the in-game console. Exec commands only function when declared within certain Classes.
但具体是在哪些类中有效果却没说。调试后发现：
UWorld APlayerController APawn AHUD AGameMode UCheatManager AGameState APlayerCameraManager 具体代码为：Runtime/Engine/Private/Player.cpp#L94
bool UPlayer::Exec( UWorld* InWorld, const TCHAR* Cmd,FOutputDevice&amp;amp; Ar) 调用栈：</description></item><item><title>Remove C++ UHT</title><link>https://hellounreal.com/status/epic/removed-cpp-uht/</link><pubDate>Wed, 14 Jun 2023 19:10:55 +0800</pubDate><guid>https://hellounreal.com/status/epic/removed-cpp-uht/</guid><description>Removed C++ UHT 在ue5-main分支中，由UE4继承来的C++版本的UHT已经被移除：Removed C++ UHT
替换为了C#实现的UHT：EpicGames.UHT</description></item><item><title>Default CppStandard to Cpp20</title><link>https://hellounreal.com/status/epic/default-cppstandard-to-cpp20/</link><pubDate>Sat, 10 Jun 2023 19:10:55 +0800</pubDate><guid>https://hellounreal.com/status/epic/default-cppstandard-to-cpp20/</guid><description>Default CppStandard to Cpp20 近期，在ue5-main分支及即将到来的UE5.3中，默认的C++语言标准会从C++17升级到C++20：
BuildSettingsVersion.V4: Default CppStandard to Cpp20. UE对新C++标准的支持上还是非常激进的。</description></item><item><title>GitDependencies错误</title><link>https://hellounreal.com/status/2023/gitdependencies-error/</link><pubDate>Fri, 19 May 2023 20:45:44 +0800</pubDate><guid>https://hellounreal.com/status/2023/gitdependencies-error/</guid><description>GitDependencies错误 2023年5月，Epic出现CDN故障，导致源码版引擎在执行setup.bat时会出现错误。
解决方案：从github上下载对应版本的Engine/Build/Commit.gitdeps.xml并替换。
相关链接：
Upcoming Disruption of Service Impacting Unreal Engine Users on GitHub UnrealEngine Github Releases</description></item></channel></rss>